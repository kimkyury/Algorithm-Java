# Generated by Django 2.2.5 on 2021-09-07 14:39

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('check_in', models.DateTimeField(auto_now=True)),
                ('check_out', models.DateTimeField(auto_now=True)),
                ('phone_number', models.IntegerField(blank=True)),
                ('avatar', models.ImageField(blank=True, upload_to='대표이미지')),
                ('gender', models.CharField(blank=True, choices=[('남성', '남성'), ('여성', '여성'), ('other', 'Other')], max_length=10)),
                ('bio', models.TextField(blank=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('province', models.CharField(blank=True, choices=[('경기도', '경기도'), ('강원도', '강원도'), ('충청남도', '충청남도'), ('충청북도', '충청북도'), ('전라남도', '전라남도'), ('전라북도', '전라북도'), ('경상남도', '경상남도'), ('경상북도', '경상북도'), ('제주도', '제주도')], max_length=20)),
                ('city', models.CharField(max_length=80)),
                ('resent_checkIn_time', models.IntegerField(blank=True)),
                ('resent_checkOut_time', models.IntegerField(blank=True)),
                ('Total_hoursOfExercise', models.IntegerField(blank=True)),
                ('Total_hoursOfVisits', models.IntegerField(blank=True)),
                ('Expiration_date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '고객',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
